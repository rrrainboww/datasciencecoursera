# Yifang Chen, Xiaowen Yang
# CSE 160
# Mar 6th 2016
# Final Project

import matplotlib.pyplot as plt
import csv
from operator import itemgetter

class Job:
    
    def __init__(self, keyword):
        self.key = keyword
        self.input_dict = csv.DictReader(open("ScriptData.csv"))
        self.keywords = []
        
        for items in self.input_dict:
            if items["KEYWORD_IN"] == keyword:
                self.keywords.append(items)

    def group(self, requirement):
        result = []
        for items in self.keywords:
            result.append(items[requirement])
        return result
          
    def plot_location(self, location_list):
        location_rank_list = self.rank_location(location_list)
        print location_rank_list
        x = [i for i in range(len(location_rank_list))]
        x_value = [name[0] for name in location_rank_list]
        y_value = [name[1] for name in location_rank_list]
        plt.xticks(x, x_value)
        plt.plot(x, y_value)
        plt.legend([self.key])
        plt.xlabel('State')
        plt.ylabel('Frequency')
        plt.savefig(self.key + 'location_rank.png')
        plt.show()
        
    
    def rank_location(self, location_list):
        state_frequency = {}
        for location in location_list:
            location = location.split(',')
            state_frequency.setdefault(location[len(location) - 1], 0)
            state_frequency[location[len(location) - 1]] += 1
        sorted_by_frequency = sorted(state_frequency.items(), key = itemgetter(1), reverse = True)
        return sorted_by_frequency
        
job = Job('BIG DATA')
#print job.keywords
groups = job.group('LOCATION')
job.plot_location(groups)


def sort_time_period(time_list): 
    result_dict = {"1 to 5 days": 0, "6 to 10 days": 0, "11 to 15 days": 0, "16 to 20 days":0, "21 to 25 days": 0, "26 to 30 days":0}
    #time_range1 = [1,5,10,15,20,25]
    #time_range2 = [6,11,16,21,26,31]
    days_list = []
    for i in time_list:
        i = i.replace('days', 'day')
        i = i.split()
        if 'day' in i:         
            days_list.append(int(i[0]))
    
    for times in days_list:
        if 0 < times < 6:
            result_dict["1 to 5 days"] += 1
        elif 5 < times < 11:
            result_dict["6 to 10 days"] += 1
        elif 10 < times < 16:
            result_dict["11 to 15 days"] += 1
        elif 15 < times < 21:
            result_dict["16 to 20 days"] += 1
        elif 20 < times < 26:
            result_dict["21 to 25 days"] += 1
        else:
            result_dict["26 to 30 days"] += 1
    return result_dict
    
